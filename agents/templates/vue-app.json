{
  "templateType": "vue-app",
  "description": "Vue.js 单页应用项目结构模板",
  "version": "1.0.0",
  
  "directoryStructure": {
    "required": [
      "src/",
      "src/components/",
      "src/views/",
      "src/composables/",
      "src/utils/",
      "src/api/",
      "src/assets/",
      "src/styles/",
      "src/router/",
      "public/",
      "tests/"
    ],
    "optional": [
      "src/stores/",
      "src/plugins/",
      "src/directives/",
      "src/types/",
      "docs/"
    ],
    "forbidden": [
      "src/component/",
      "src/view/",
      "src/util/",
      "components/",
      "views/"
    ]
  },

  "fileNamingRules": {
    "components": {
      "pattern": "PascalCase",
      "extensions": [".vue"],
      "examples": ["UserCard.vue", "LoginForm.vue"],
      "structure": "可以使用文件夹组织: components/User/UserCard.vue"
    },
    "views": {
      "pattern": "PascalCase",
      "extensions": [".vue"],
      "examples": ["HomePage.vue", "UserProfile.vue"],
      "structure": "按路由结构组织: views/User/Profile.vue"
    },
    "composables": {
      "pattern": "camelCase (use prefix)",
      "extensions": [".js", ".ts"],
      "examples": ["useAuth.js", "useLocalStorage.ts"],
      "prefix": "use"
    },
    "utils": {
      "pattern": "camelCase",
      "extensions": [".js", ".ts"],
      "examples": ["formatDate.js", "validation.ts"]
    },
    "api": {
      "pattern": "camelCase (with suffix)",
      "extensions": [".js", ".ts"],
      "examples": ["userApi.js", "authApi.ts"],
      "suffix": "Api"
    },
    "stores": {
      "pattern": "camelCase",
      "extensions": [".js", ".ts"],
      "examples": ["userStore.js", "authStore.ts"]
    }
  },

  "structureRules": [
    {
      "rule": "components-in-src",
      "description": "可复用组件放在 src/components/，页面级组件放在 src/views/",
      "violation": "把页面组件放在 components 目录",
      "correct": "components/ 放可复用组件，views/ 放页面"
    },
    {
      "rule": "composables-naming",
      "description": "组合式函数必须以 'use' 开头",
      "violation": "authComposable.js, userComposable.js",
      "correct": "useAuth.js, useUser.js"
    },
    {
      "rule": "vue-sfc-structure",
      "description": "Vue 单文件组件按 template、script、style 顺序",
      "violation": "style 写在 template 前面",
      "correct": "<template>、<script>、<style> 的顺序"
    },
    {
      "rule": "router-separation",
      "description": "路由配置独立在 src/router/ 目录",
      "violation": "路由配置散落在各个组件中",
      "correct": "src/router/index.js"
    }
  ],

  "exampleFiles": {
    "src/components/Example.vue": {
      "content": "<template>\n  <div class=\"example\">\n    <h1>{{ title }}</h1>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Example',\n  props: {\n    title: {\n      type: String,\n      default: '示例组件'\n    }\n  }\n};\n</script>\n\n<style scoped>\n.example {\n  padding: 1rem;\n}\n</style>",
      "description": "Vue 组件示例文件"
    },
    "src/composables/useExample.js": {
      "content": "import { ref, computed } from 'vue';\n\nexport function useExample() {\n  const count = ref(0);\n  const doubled = computed(() => count.value * 2);\n  \n  const increment = () => {\n    count.value++;\n  };\n  \n  return {\n    count,\n    doubled,\n    increment\n  };\n}",
      "description": "Vue 组合式函数示例文件"
    },
    "src/router/index.js": {
      "content": "import { createRouter, createWebHistory } from 'vue-router';\nimport HomePage from '@/views/HomePage.vue';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: HomePage\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\nexport default router;",
      "description": "Vue Router 配置示例文件"
    }
  },

  "claudeCodeReminders": {
    "strictMode": true,
    "autoValidation": true,
    "reminders": [
      "Vue 组件必须使用 PascalCase 命名，扩展名为 .vue",
      "可复用组件放在 src/components/，页面组件放在 src/views/",
      "组合式函数必须以 use 开头并放在 src/composables/",
      "路由配置统一放在 src/router/ 目录",
      "状态管理相关文件放在 src/stores/ 目录",
      "Vue SFC 按 template、script、style 顺序编写"
    ]
  }
}